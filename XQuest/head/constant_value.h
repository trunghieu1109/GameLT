#ifndef CONSTANT_VALUE__H
#define CONSTANT_VALUE__H
#include <iostream>
#include <SDL.h>
#include <SDL_image.h>
#include <SDL_ttf.h>
#include <SDL_mixer.h>
#include <string>
#include "texture.h"
using namespace std;

const int LEVEL_HEIGHT = 3840;
const int LEVEL_WIDTH = 5120;
const int TOTAL_TILES = 3072;
const int SCREEN_WIDTH = 960;
const int SCREEN_HEIGHT = 640;
const int TOTAL_TILE_SPRITES = 80;
const int TILE_WIDTH = 80;
const int TILE_HEIGHT = 80;
const string WINDOW_TITLE = "XQuest";
const int CHAR_WIDTH = 60;
const int CHAR_HEIGHT = 60;
const int CHAR_VEL = 5;
const int CHAR_JUMP = 200;
const int CHAR_DASH = 300;
const int DIAMOND_WIDTH = 40;
const int DIAMOND_HEIGHT = 40;
const int PORTAL_HEIGHT = 200;
const int PORTAL_WIDTH = 80;
const int BUTTON_WIDTH = 90;
const int BUTTON_HEIGHT = 90;
const int TOTAL_ROUNDS = 3;
const int THORN_WIDTH = 80;
const int THORN_HEIGHT = 80;
const int BULLET_HEIGHT = 30;
const int BULLET_WIDTH = 80;
const int GUN_WIDTH = 80;
const int GUN_HEIGHT = 80;
const int HEALTH_BAR_HEIGHT = 42;
const int HEALTH_BAR_WIDTH = 424;
const int HEALTH_HEIGHT = 30;
const int HEALTH_WIDTH = 400;
const int TOTAL_GUNS = 5;
const int FIRE_WIDTH = 40;
const int FIRE_HEIGHT = 160;
const int FIRE_BALL_WIDTH = 80;
const int FIRE_BALL_HEIGHT = 80;
const int TOTAL_FIRE_TURRETS = 7;
const int XBUSTER_WIDTH = 64;
const int XBUSTER_HEIGHT = 32;
const int EXPLOSION_WIDTH = 80;
const int EXPLOSION_HEIGHT = 80;
const int CREEP_BULLET_WIDTH = 15;
const int CREEP_BULLET_HEIGHT = 15;
const int LAZER_GUN_HEIGHT = 80;
const int LAZER_GUN_WIDTH = 80;
const int BOSS_WIDTH = 320;
const int BOSS_HEIGHT = 240;
const int NUM_COLUMN = 64;
const int NUM_ROW = 48;
const int FIRE_PILLAR_HEIGHT = 240;
const int FIRE_PILLAR_WIDTH = 80;
const int FIRE_FLOW_WIDTH = 120;
const int FIRE_FLOW_HEIGHT = 160;
const int CREEP_HEIGHT = 80;
const int CREEP_WIDTH = 80;
const int DEFAULT_HEALTH = 150;
const int DEFAULT_MANA = 165;
const int GIGA_WIDTH = 63;
const int GIGA_HEIGHT = 60;
const int CIRCLE_IN_DOUBLE_JUMP_WIDTH = 140;
const int CIRCLE_IN_DOUBLE_JUMP_HEIGHT = 50;
const int CHARGE_WIDTH = 120;
const int CHARGE_HEIGHT = 120;
const int DOOR_BUTTON_WIDTH = 80;
const int DOOR_BUTTON_HEIGHT = 80;
const int HEALTH_STORED_WIDTH = 80;
const int HEALTH_STORED_HEIGHT = 40;
const int HEART_HEIGHT = 60;
const int HEART_WIDTH = 40;
const int LAVABOSS_WIDTH = 320;
const int LAVABOSS_HEIGHT = 320;
const int FIRE_CIRCLE_WIDTH = 200;
const int FIRE_CIRCLE_HEIGHT = 200;
const int LAVA_BALL_HEIGHT = 80;
const int LAVA_BALL_WIDTH = 80;
const int LAVA_FIST_WIDTH = 160;
const int LAVA_FIST_HEIGHT = 320;
const int LAVA_SUN_WIDTH = 50;
const int LAVA_SUN_HEIGHT = 50;
const int KNEE_WIDTH = 80;
const int KNEE_HEIGHT = 20;
const int LAVA_DROPLET_WIDTH = 80;
const int LAVA_DROPLET_HEIGHT = 80;
const int MAGIC_CIRCLE_VERTICAL_WIDTH = 80;
const int MAGIC_CIRCLE_VERTICAL_HEIGHT = 400;
const int MAGIC_CIRCLE_HORIZONTAL_WIDTH = 400;
const int MAGIC_CIRCLE_HORIZONTAL_HEIGHT = 80;
const int MANA_STORED_WIDTH = 80;
const int MANA_STORED_HEIGHT = 40;
const int ROBOT_WIDTH = 240;
const int ROBOT_HEIGHT = 160;
const int ROBOT_BULLET_WIDTH = 60;
const int ROBOT_BULLET_HEIGHT = 40;
const int ROBOT_GATLING_BULLET_WIDTH = 45;
const int ROBOT_GATLING_BULLET_HEIGHT = 40;
const int ROBOT_SUPER_LAZER_WIDTH = 80;
const int ROBOT_SUPER_LAZER_HEIGHT = 1200;
const int SAW_WIDTH = 80;
const int SAW_HEIGHT = 80;
const int SIGMA_WIDTH = 400;
const int SIGMA_HEIGHT = 400;
const int SIGMA_CYCLONE_WIDTH = 160;
const int SIGMA_CYCLONE_HEIGHT = 320;
const int SIGMA_LAZE_WIDTH = 80;
const int SIGMA_LAZE_HEIGHT = 300;
const int SIGMA_BULLET_WIDTH = 40;
const int SIGMA_BULLET_HEIGHT = 40;
const int SIGMA_ELECTRIC_BALL_WIDTH = 80;
const int SIGMA_ELECTRIC_BALL_HEIGHT = 80;
const int DRAGON_PORTAL_WIDTH = 104;
const int DRAGON_PORTAL_HEIGHT = 300;
const int FIRE_ALL_MAP_WIDTH = 1250;
const int FIRE_ALL_MAP_HEIGHT = 1000;
const int FONT_SIZE = 20;
const int ACTION_BUTTON_WIDTH = 300;
const int ACTION_BUTTON_HEIGHT = 60;
const int DISTANCE_BETWEEN_BUTTON = 20;
enum TextureID
{
    TEXTURE_TILE,
    TEXTURE_DIAMOND,
    TEXTURE_PORTAL,
    TEXTURE_THUMB,
    TEXTURE_THORN,
    TEXTURE_GUN,
    TEXTURE_BULLET,
    TEXTURE_FIRE,
    TEXTURE_FIRE_TURRET,
    TEXTURE_HEALTH_BAR,
    TEXTURE_XBUSTER,
    TEXTURE_EXPLOSION,
    TEXTURE_CREEP,
    TEXTURE_CREEP_BULLET,
    TEXTURE_CHARGING,
    TEXTURE_LAZER,
    TEXTURE_LAZER_GUN,
    TEXTURE_LAZER_HEAD,
    TEXTURE_DOOR_BUTTON,
    TEXTURE_DRAGON,
    TEXTURE_FIRE_BALL,
    TEXTURE_MAGIC_CIRCLE,
    TEXTURE_DRAGON_HEALTH_BAR,
    TEXTURE_DOUBLE_JUMP,
    TEXTURE_FIRE_FLOW,
    TEXTURE_DRAGON_PORTAL,
    TEXTURE_WARNING,
    TEXTURE_FIRE_PILLAR,
    TEXTURE_GIGA_ATTACK,
    TEXTURE_MANA_BAR,
    TEXTURE_SAW,
    TEXTURE_ROBOT,
    TEXTURE_ROBOT_BULLET,
    TEXTURE_ROBOT_BULLET_2,
    TEXTURE_EXPLOSION_BULLET,
    TEXTURE_ROBOT_HEALTH_BAR,
    TEXTURE_LAVABOSS_HEALTH_BAR,
    TEXTURE_BULLET_GATLING_GUN,
    TEXTURE_SUPER_LAZER,
    TEXTURE_MAIN_MENU_BACKGROUND,
    TEXTURE_PAUSE_MENU,
    TEXTURE_STAGE_SELECT,
    TEXTURE_LAVA_MAGIC_CIRCLE,
    TEXTURE_LOSING_BACKGROUND,
    TEXTURE_FIRE_ALL_MAP,
    TEXTURE_OPAQUE_LAVA,
    TEXTURE_LAVA_BOSS,
    TEXTURE_LAVA_FIST,
    TEXTURE_LAVA_FIRE_BALL,
    TEXTURE_LAVA_DROPLET,
    TEXTURE_FIRE_CIRCLE,
    TEXTURE_SUN,
    TEXTURE_KNEE,
    TEXTURE_SIGMA,
    TEXTURE_SIGMA_ELECTRIC_BALL,
    TEXTURE_SIGMA_BULLET,
    TEXTURE_SIGMA_HEALTH_BAR,
    TEXTURE_SIGMA_LAZER,
    TEXTURE_SIGMA_POWER,
    TEXTURE_SIGMA_CYCLONE,
    TEXTURE_STORE_BAR,
    TEXTURE_HEALTH_STORE,
    TEXTURE_MANA_STORE,
    TEXTURE_HEART,
    TEXTURE_HEALTH_BAR_REST,
    TEXTURE_LOCK_STAGE,
    TEXTURE_DIAMOND_BAR,
    TEXTURE_ID_TOTAL
};

enum MixID
{
    MIX_DASH,
    MIX_NORMAL_ATTACK,
    MIX_JUMP,
    MIX_JUMP_CLIMB,
    MIX_GIGA,
    MIX_HURT,
    MIX_CHARGING,
    MIX_EXPLOSION,
    MIX_FIRE_BALL,
    MIX_FIRE_FLOW,
    MIX_FIRE_PILLAR,
    MIX_WARNING,
    MIX_BOSS_DIED,
    MIX_FIRE_SPEAR,
    MIX_GUN_SHOT,
    MIX_CREEP_SHOT,
    MIX_DIAMOND_COLLISION,
    MIX_MENU_SELECTED,
    MIX_ROBOT_CHARGING,
    MIX_ROBOT_DASH,
    MIX_ROBOT_GATLING,
    MIX_ROBOT_JUMP,
    MIX_ROBOT_POWER,
    MIX_ROBOT_SAW,
    MIX_ROBOT_SHOT,
    MIX_ROBOT_WALK,
    MIX_LAVA_APPEAR,
    MIX_LAVA_DISAPPEAR,
    MIX_LAVA_FIST,
    MIX_LAVA_CIRCLE,
    MIX_LAVA_KNEE,
    MIX_LAVA_DROPED,
    MIX_LAVA_DROPPING,
    MIX_LAVA_BALL,
    MIX_SIGMA_CYCLONE,
    MIX_SIGMA_BULLET,
    MIX_SIGMA_ELECTRIC_BALL,
    MIX_SIGMA_SUPER_LAZER,
    MIX_SIGMA_LAZER,
    MIX_SIGMA_EXPLOSION2,
    MIX_ID_TOTAL
};
enum ACTION_BUTTON_ID
{
    NEW_GAME_BUTTON,
    CONTINUE_GAME_BUTTON,
    QUIT_GAME_BUTTON,
    SELECT_GAME_BUTTON,
    BACK_TO_MAIN_MENU_BUTTON,
    RESTART_GAME_BUTTON,
    BACK_BUTTON,
    TOTAL_ACTION_BUTTON
};
enum STAGE_BUTTON_ID
{
    STAGE_1_BUTTON,
    STAGE_2_BUTTON,
    STAGE_3_BUTTON,
    STAGE_4_BUTTON,
    STAGE_5_BUTTON,
    TOTAL_STAGE_BUTTON
};
enum STORE_BUTTON_ID
{
    HEALTH_STORE_BUTTON,
    MANA_STORE_BUTTON,
    TOTAL_STORE_BUTTON
};

enum MENU_ID
{
    MAIN_MENU,
    PAUSE_MENU,
    SELECT_STAGE,
    LOSING_MENU,
    TOTAL_MENU
};
enum MAP_ID
{
    STAGE_1,
    STAGE_2,
    STAGE_3,
    STAGE_4,
    STAGE_5
};
enum OBJECT_ID
{
    GUN,
    THORN,
    PORTAL,
    FIRETURRET,
    DIAMOND,
    DOORBUTTON,
    LAZERGUN,
    CREEP,
    SAW,
    MAGICCIRCLE,
    HEALTHSTORED,
    MANASTORED,
    HEART,
    TOTAL_OBJECTS
};
#endif // CONSTANT_VALUE__H
